<lcgdict>
  <!-- PlotUtils objects -->
  <class name="PlotUtils::AnaBinning" />
  <class name="PlotUtils::axis_binning" />
  <class name="PlotUtils::MnvAnaTuple" />
  <class name="PlotUtils::MnvEVD" />
  <class name="PlotUtils::MnvHist" />
  <class name="PlotUtils::MnvHistoConstrainer" />
  <class name="PlotUtils::MnvHistoConstrainer::UnivID" />

  <class name="PlotUtils::MnvH1D" />
  <class name="PlotUtils::MnvH2D" />
  <class name="PlotUtils::MnvH3D" />
  <class name="PlotUtils::MnvLatErrorBand" />
  <class name="PlotUtils::MnvLatErrorBand2D" />
  <class name="PlotUtils::MnvLatErrorBand3D" />
  <class name="PlotUtils::MnvPlotter" />
  <class name="PlotUtils::MnvRecoShifter" />
  <class name="PlotUtils::MnvVertErrorBand" />
  <class name="PlotUtils::MnvVertErrorBand2D" />
  <class name="PlotUtils::MnvVertErrorBand3D" />
  <class name="PlotUtils::TargetUtils" />
  <class name="PlotUtils::MnvNormalizer" />
  <class name="PlotUtils::POTCounter" />
  <class name="PlotUtils::ChainWrapper" />
  <class name="PlotUtils::TreeWrapper" />
  <class name="PlotUtils::HyperDimLinearizer" />
  <class name="PlotUtils::GridCanvas" />

  <!-- PlotUtils weight classes-->
  <class name="PlotUtils::weight_2p2h" />
  <class name="PlotUtils::weightRPA" />
  <class name="PlotUtils::weightLowQ2Pi" />
  <class name="PlotUtils::weightDIS" />
  <class name="PlotUtils::weightZExp" />

  <class name="PlotUtils::MnvEVD::Event" />
  <class name="PlotUtils::FluxReweighter" />
  <class name="PlotUtils::FluxReweighterWithWiggleFit" />
  <!-- exceptions -->
  <class name="PlotUtils::BadUnivWgtError" />
  <class name="PlotUtils::ConstraintAccessError" />
  <class name="PlotUtils::ConstraintLoadError" />
  <class name="PlotUtils::MissingFluxUnivError" />
  <class name="PlotUtils::MissingSpectatorStrategyError" />
  <class name="PlotUtils::NoFluxUnivError" />
  <class name="PlotUtils::NoWgtdSpreadError" />
  <class name="PlotUtils::SpectatorConstraintCollisionError" />

  <!-- the ArachneUtils library has a few typedefs... -->
  <class name="PlotUtils::MnvEVD::Events" />
  <class name="PlotUtils::MnvEVD::EventGroup" />
  <class name="PlotUtils::MnvEVD::EventGroupMap" />

  <!-- ... so does MnvPlotter ... -->
  <class name="PlotUtils::MnvPlotter::ErrorSummaryGroupMap" />
  <class name="std::pair<std::string, std::vector<std::string> >" />

  <!-- STL collections of these items (needed for persisting MnvH1Ds) -->
  <class name="std::map< std::string, TH1D* >" />
  <class name="std::map< std::string, PlotUtils::MnvLatErrorBand* >" />
  <class name="std::map< std::string, PlotUtils::MnvVertErrorBand* >" />
  <class name="std::map< std::string, TMatrixT<double>* >" />
  <class name="std::map< std::string, PlotUtils::MnvVertErrorBand2D* >" />
  <class name="std::map< std::string, PlotUtils::MnvLatErrorBand2D* >" />
  <class name="std::map< std::string, PlotUtils::MnvVertErrorBand3D* >" />
  <class name="std::map< std::string, PlotUtils::MnvLatErrorBand3D* >" />

  <!-- ... as well as the std::pair<>s they implement ... -->
  <class name="std::pair< std::string, PlotUtils::MnvLatErrorBand* >" />
  <class name="std::pair< std::string, PlotUtils::MnvVertErrorBand* >" />
  <class name="std::pair< std::string, TMatrixT<double>* >" />
  <class name="std::pair< std::string, PlotUtils::MnvVertErrorBand2D* >" />
  <class name="std::pair< std::string, PlotUtils::MnvLatErrorBand2D* >" />
  <class name="std::pair< std::string, PlotUtils::MnvVertErrorBand3D* >" />
  <class name="std::pair< std::string, PlotUtils::MnvLatErrorBand3D* >" />

  <class name="std::vector< TH1D* >" />
  <class name="std::vector< TH2D* >" />
  <class name="std::vector< TH3D* >" />

  <!-- PlotUtils systematic universes classes (new sys framework)-->
  <class name="PlotUtils::DefaultCVUniverse" />
  <class name="PlotUtils::BaseUniverse" />
  <class name="PlotUtils::MinervaUniverse" />
  <!--<class name="PlotUtils::HistWrapper<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::Hist2DWrapper<PlotUtils::DefaultCVUniverse>" />-->
  <class name="PlotUtils::FluxUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::GenieUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::GenieRvx1piUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::GenieFaCCQEUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::MuonUniverseMinerva<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::MuonUniverseMinos<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::MuonResolutionUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::ResponseUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::BeamAngleXUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::BeamAngleYUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::Universe2p2h<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::RPAUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::LowQ2PionUniverse<PlotUtils::DefaultCVUniverse>" />
  <class name="PlotUtils::MinosEfficiencyUniverse<PlotUtils::DefaultCVUniverse>" />
  

  <!-- PlotUtils standalone systematics functions (new sys framework)-->	
  <function name="PlotUtils::flux_reweighter" />
  <function name="PlotUtils::GetGenieSystematics" />
  <function name="PlotUtils::GetGenieSystematicsMap" />
  <function name="PlotUtils::GetFluxSystematicsMap" />
  <function name="PlotUtils::GetMuonSystematicsMap" />
  <function name="PlotUtils::GetAngleSystematicsMap" />
  <function name="PlotUtils::GetRecoilSystematicsMap" />
  <function name="PlotUtils::GetResolutionSystematicsMap" />
  <function name="PlotUtils::GetAngleSystematics" />
  <function name="PlotUtils::nuEnergyCCQE" />
  <function name="PlotUtils::qSquaredCCQE" />
  <function name="PlotUtils::struckNucleonMass" />
  <function name="PlotUtils::W" />
  <function name="PlotUtils::WSquared" />
  <function name="PlotUtils::xBjorken" />
  <function name="MnvColors::GetColors" /> 

  <!-- Automatic error handling -->
  <class name="ROOT::detail::beforeMain" />
  <class name="ROOT::exception" />
  <class name="ROOT::warning" />
  <class name="ROOT::error" />
  <function name="PlotUtils::HandleErrorsInPython" />
</lcgdict>

